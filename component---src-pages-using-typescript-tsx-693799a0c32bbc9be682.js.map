{"version":3,"file":"component---src-pages-using-typescript-tsx-693799a0c32bbc9be682.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-header\">\n    <div className=\"site-header__inner\">\n      <div className=\"site-header__logo-container\">\n        <Link to=\"/\" className=\"site-header__logo\">\n          <div className=\"site-header__logo-text\">\n            <div>Felix</div>\n            <div>Taschbach</div>\n          </div>\n        </Link>\n      </div>\n      <nav className=\"site-header__nav\">\n        <ul className=\"site-header__nav-list\">\n          {/* <li className=\"site-header__nav-item\"><Link to=\"/about\" className=\"site-header__nav-link\">ABOUT</Link></li>\n          <li className=\"site-header__nav-item\"><Link to=\"/publications\" className=\"site-header__nav-link\">PUBLICATIONS</Link></li>\n          <li className=\"site-header__nav-item\"><Link to=\"/conferences\" className=\"site-header__nav-link\">CONFERENCES</Link></li>\n          <li className=\"site-header__nav-item\"><Link to=\"/contact\" className=\"site-header__nav-link\">CONTACT</Link></li> */}\n        </ul>\n      </nav>\n      <button className=\"site-header__menu-button\" aria-label=\"Toggle menu\">\n        <span className=\"site-header__menu-icon\"></span>\n      </button>\n    </div>\n    <div className=\"site-header__issue-bar\">\n      <div className=\"site-header__issue-bar-inner\">\n        <span>University of California San Diego</span>\n        <span className=\"site-header__issue-bar-separator\">|</span>\n        <span>updated April 2025</span>\n        {/* <div className=\"site-header__issue-bar-links\"> */}\n          {/* <Link to=\"/archive\" className=\"site-header__issue-bar-link\">Archive</Link>\n          <Link to=\"/notes\" className=\"site-header__issue-bar-link\">Notes</Link>\n          <Link to=\"/subscribe\" className=\"site-header__issue-bar-link site-header__issue-bar-link--subscribe\">Subscribe</Link> */}\n        {/* </div> */}\n      </div>\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./footer.css\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"site-footer\">\n      <div className=\"container\">\n        <div className=\"site-footer__bottom\">\n          <p className=\"site-footer__copyright\">\n            Â© {new Date().getFullYear()} Felix Taschbach. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer ","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./global.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","className","Footer","Date","getFullYear","_data$site$siteMetada","children","useStaticQuery","Header","siteMetadata","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}